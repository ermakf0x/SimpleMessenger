// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleMessenger.Server;

#nullable disable

namespace SimpleMessenger.Server.Migrations
{
    [DbContext(typeof(DataStorage))]
    partial class DataStorageModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("SimpleMessenger.Server.Model.Contact", b =>
                {
                    b.Property<int>("CurrentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FriendId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CurrentId", "FriendId");

                    b.HasIndex("FriendId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("SimpleMessenger.Server.Model.User2", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SimpleMessenger.Server.Model.Contact", b =>
                {
                    b.HasOne("SimpleMessenger.Server.Model.User2", "Current")
                        .WithMany("Contacts")
                        .HasForeignKey("CurrentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleMessenger.Server.Model.User2", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Current");

                    b.Navigation("Friend");
                });

            modelBuilder.Entity("SimpleMessenger.Server.Model.User2", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
