// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleMessenger.Server;

#nullable disable

namespace SimpleMessenger.Server.Migrations
{
    [DbContext(typeof(DataStorage))]
    [Migration("20220207181428_newChatModel")]
    partial class newChatModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("SimpleMessenger.Core.Model.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastTimeModified")
                        .HasColumnType("TEXT");

                    b.Property<int?>("User2UID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("User2UID");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("SimpleMessenger.Core.Model.ChunkChat", b =>
                {
                    b.Property<DateOnly>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastTimeModified")
                        .HasColumnType("TEXT");

                    b.HasKey("CreationTime");

                    b.HasIndex("ChatId");

                    b.ToTable("ChunkChat");
                });

            modelBuilder.Entity("SimpleMessenger.Core.Model.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SenderId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("SimpleMessenger.Core.Model.User", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UID");

                    b.HasIndex("ChatId");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("SimpleMessenger.Server.Model.User2", b =>
                {
                    b.HasBaseType("SimpleMessenger.Core.Model.User");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("TEXT");

                    b.Property<int?>("User2UID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("User2UID");

                    b.HasDiscriminator().HasValue("User2");
                });

            modelBuilder.Entity("SimpleMessenger.Core.Model.Chat", b =>
                {
                    b.HasOne("SimpleMessenger.Server.Model.User2", null)
                        .WithMany("Chats")
                        .HasForeignKey("User2UID");
                });

            modelBuilder.Entity("SimpleMessenger.Core.Model.ChunkChat", b =>
                {
                    b.HasOne("SimpleMessenger.Core.Model.Chat", "Chat")
                        .WithMany("Chunks")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("SimpleMessenger.Core.Model.Message", b =>
                {
                    b.HasOne("SimpleMessenger.Core.Model.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("SimpleMessenger.Core.Model.User", b =>
                {
                    b.HasOne("SimpleMessenger.Core.Model.Chat", null)
                        .WithMany("Members")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("SimpleMessenger.Server.Model.User2", b =>
                {
                    b.HasOne("SimpleMessenger.Server.Model.User2", null)
                        .WithMany("Contacts")
                        .HasForeignKey("User2UID");
                });

            modelBuilder.Entity("SimpleMessenger.Core.Model.Chat", b =>
                {
                    b.Navigation("Chunks");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("SimpleMessenger.Server.Model.User2", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
